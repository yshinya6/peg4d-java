TopLevel
    = Document
    
Chunk 
    = Document
    
File 
    = Document

Document
    = MISC* DocType MISC* 
    
    
DocType
    = '<!DOCTYPE' _* {@DocTypeName '[' (@Dtd)* #doctype } ']>'
    

Dtd
    =  _*  '<!' (Element/Attlist/Entity) '>'  _*
    




	
	

	


//for Element
//
//[45]   	elementdecl	   ::=   	'<!ELEMENT' S Name S contentspec S? '>'	[VC: Unique Element Type Declaration]
//[46]   	contentspec	   ::=   	'EMPTY' | 'ANY' | Mixed | children
//[47]   	children	   ::=   	(choice | seq) ('?' | '*' | '+')?
//[48]   	cp	   ::=   	(Name | choice | seq) ('?' | '*' | '+')?
//[49]   	choice	   ::=   	'(' S? cp ( S? '|' S? cp )+ S? ')'	[VC: Proper Group/PE Nesting]
//[50]   	seq	   ::=   	'(' S? cp ( S? ',' S? cp )* S? ')'	[VC: Proper Group/PE Nesting]

Element
	= _* 'ELEMENT' _* {@ElementName _* contentSpec _* #element} _*

contentSpec
	=  (@{('EMPTY' / 'ANY') #others } / @TopMember )
	

TopMember
	= { ( ('(' _* @Data _* ')') / @MemberName / @Choice / @Seq) (@Regex)? #member}
	
Member
	= {  (@Data / @MemberName / @Choice / @Seq) (@Regex)? #member}

Choice 
	= { '(' _* @Member (_* @Or _* @Member)+ _* ')' (@Regex)? #choice}

Seq 
	= { '(' _* @Member (_* VS _* @Member)* _* ')' (@Regex)? #seq}

	
	
Data
	= { '#PCDATA' #data}
	
Regex
	= { ( '*' / '+' / '?') #regex}
	
Or
	= { _* '|' `/` _* #or}
	
OtherMember
	= { ('EMPTY' / 'ANY') #others}
	
	
//for Attlist
//AttlistDecl	   ::=   	'<!ATTLIST' S Name AttDef* S? '>'
//AttDef	   ::=   	S Name S AttType S DefaultDecl

Attlist
	= _* 'ATTLIST' _* {@AttElementName _* (@AttDef)* #attlist} _*

AttDef
	= { _* @AttName _* @AttType _* @DefaultDecl _* #attDef}
	 
AttType
	= { (@{'CDATA' #CDATA} / tokenized / @Enumerated) #attType }


tokenized
	= 
		  @{'IDREFS' #IDREFS}		
		/ @{'IDREF' #IDREF}
		/ @{'ID' #ID}  
		/ @{'ENTITY' #ENTITY} 
		/ @{'ENTITIES' #ENTITIES} 
		/ @{'NMTOKENS' #NMTOKENS} 
		/ @{'NMTOKEN' #NMTOKEN} 

Enumerated
	= { '(' _* @{ NAME #enumMember } _* ( @Or  @{ NAME #enumMember } )+   _* ')'  _* #enum }
	
DefaultDecl
	= { ( @{'#REQUIRED' #REQUIRED} / @{'#IMPLIED' #IMPLIED} / ( (@{'#FIXED' #FIXED})? _* @DefaultValue )) #default}
	
DefaultValue
	= {STRING #defaultValue}
	
//for Entity


//[70]   	EntityDecl	   ::=   	GEDecl | PEDecl
//[71]   	GEDecl	   ::=   	'<!ENTITY' S Name S EntityDef S? '>'
//[72]   	PEDecl	   ::=   	'<!ENTITY' S '%' S Name S PEDef S? '>'
//[73]   	EntityDef	   ::=   	EntityValue| (ExternalID NDataDecl?)
//[74]   	PEDef	   ::=   	EntityValue | ExternalID


Entity
	= _* 'ENTITY' _* {@EntityName _* (('SYSTEM')/('PUBLIC' _* '"' PUBLICCHAR* '"'))? _* @String #entity} _*

PUBLICCHAR
	=  [a-zA-Z0-9] / [-'()+,./:=?;!*#@$_%] / '\x20' / '\xD' / '\xA' 

//Name
AttName
	= {NAME #attName}
	
ElementName
	= {NAME #elementName}
	
AttElementName
	= {NAME #attElementName}
	
MemberName
	= {NAME #memberName}
	
EntityName
	= {NAME #entityName}
	
DocTypeName
	= {NAME #docTypeName}
	

Name
	= { [A-Za-z:%_] ( '-' / [A-Za-z0-9:._%;])*  #name }

NAME
	=  [A-Za-z:%_] ( '-' / [A-Za-z0-9:._%;])*

String
    =  '"' { ( !'"' . )*  #string } '"'
    
STRING
	=  '"' ( !'"' . )* '"'
    


//Reference //TODO


MISC
    = COMMENT / _+
    

COMMENT
    = '<!--' (!'-->' . )* '-->'
    
    
VS
	= _* ',' _*
	

_ = [ \t\r\n]
